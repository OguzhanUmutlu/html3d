const __eval=[],_eval=a=>new Promise(b=>__eval.push([a,b]));setInterval(()=>{__eval.forEach(([code,r])=>{try{r({data:eval(code)})}catch(e){r({error:e})}}),__eval.length=0}),(async()=>{let elementAssignments=new Map,loadPromise=new Promise(a=>addEventListener("load",a)),allChildrens=d=>{let b=d.children,c=[];for(let a=0;a<b.length;a++)c.push(b[a]),c.push(...allChildrens(b[a]));return c};class HTML3D{constructor(a,b,c,d){this.element=a,this.scene=b,this.camera=c,this.renderer=d,this.rendering=!0,this._f=[],this._listeners={},this.fonts=[],this.maximized=!1,this._lastMaximize=null,this.orbitControls=[],this.arcballControls=[],this.flyControls=[],this.firstPersonControls=[],this.pointerLockControls=[],this.trackballControls=[]}render(){this.emit("render"),this.emit("render.before"),this.orbitControls.forEach(a=>a.update()),this.flyControls.forEach(a=>a.update(a._clock.getDelta())),this.firstPersonControls.forEach(a=>a.update(a._clock.getDelta())),this.trackballControls.forEach(a=>a.update()),this.renderer.render(this.scene,this.camera),this._f.push(Date.now()+1e3),this._f=this._f.filter(a=>a>Date.now()),this.emit("render.after")}get canvas(){return this.renderer.domElement}get fps(){return this._f.length}get objects(){return this.scene.children}maximize(){this.maximized||(this._lastMaximize=[this.canvas.width,this.canvas.height]),this.maximized=!0,this.onResize()}unmaximize(){this.maximized=!1,this._lastMaximize&&(this.canvas.width=this._lastMaximize[0],this.canvas.height=this._lastMaximize[1]),this._lastMaximize=null,this.onResize()}onResize(){this.emit("resize"),this.maximized&&(this.canvas.width=window.innerWidth,this.canvas.height=window.innerHeight);let{width:a,height:b}=this.canvas;this.camera.aspect=a/b,this.camera.updateProjectionMatrix(),this.renderer.setSize(a,b),this.trackballControls.forEach(a=>a.update())}findById(a){return allChildrens(this.element).find(b=>b.id===a)}findByClass(a){return Array.from(this.element.getElementsByClassName(a))}findByTag(a){return Array.from(this.element.getElementsByTagName(a))}findByName(a){return allChildrens(this.element).find(b=>b.name===a)}findByQuery(a){return this.element.querySelector(a)}findObjectByElement(a){return elementAssignments.get(a)}findObjectById(a){return this.findObjectByElement(this.findById(a))}findObjectByClass(a){return this.findObjectByElement(this.findByClass(a)[0])}findObjectByTag(a){return this.findObjectByElement(this.findByTag(a)[0])}findObjectByName(a){return this.findObjectByElement(this.findByName(a)[0])}findObjectByQuery(a){return this.findObjectByElement(this.findByQuery(a))}findObjectsByClass(a){return this.findByClass(a).map(a=>this.findObjectByElement(a))}findObjectsByTag(a){return this.findByTag(a).map(a=>this.findObjectByElement(a))}findObjectsByName(a){return this.findByName(a).map(a=>this.findObjectByElement(a))}on(a,b){this._listeners[a]=[...this._listeners[a]||[],[b,!0]]}once(a,b){this._listeners[a]=[...this._listeners[a]||[],[b,!1]]}off(a,b){this._listeners[a]=this._listeners[a].filter(a=>a[0]!==b)}async emit(c,...d){let a=this._listeners[c]||[];for(let b=0;b<a.length;b++){let e=a[b];await e[0](...d)}this._listeners[c]=a.filter(a=>a[1])}}addEventListener("resize",()=>html3ds.forEach(a=>a.onResize()));let renderAll=()=>{for(let a=0;a<html3ds.length;a++)html3ds[a].rendering&&html3ds[a].render();requestAnimationFrame(renderAll)},html3ds=[],pr,promise=new Promise(a=>pr=a);window.html3d={promise,findById:a=>html3ds.find(b=>b.element.id===a),warnings:window.html3d?.warnings||{loadStart:!1,loadEnd:!0}},await loadPromise;let els=document.querySelectorAll("html3d"),loadScript=a=>new Promise(c=>{let b=document.createElement("script");b.src=a,b.onload=c,document.head.appendChild(b)}),loadLibrary=async(b,a,c)=>{try{if(!await b())throw new Error}catch(d){html3d.warnings.loadStart&&console.info("%cCouldn't find "+a+", trying to load it...","color:#ff0000"),await loadScript(c),html3d.warnings.loadEnd&&console.info("%c"+a+" has been loaded.","color:#00ff00")}};await loadLibrary(_=>THREE,"ThreeJS","https://threejs.org/build/three.min.js");let{Scene,PerspectiveCamera,WebGLRenderer}=THREE,sides={front:THREE.FrontSide,back:THREE.BackSide,double:THREE.DoubleSide},numberCheck=(a,b)=>{if("number"==typeof a)return a;if(!a)return b;a=a.replaceAll("pi",Math.PI);try{let{sin,cos,tan,asin,acos,atan,atan2,sqrt,pow,abs,log,log2,log10,exp,min,max,floor,ceil,round,sign,PI,LN2,E,cosh,cbrt,imul,sinh,LN10,acosh,tanh,asinh,atanh,hypot,clz32,expm1,fround,log1p,LOG2E,LOG10E,random,SQRT1_2,SQRT2,trunc}=Math;[..."+-*/^()"].some(a=>a.includes(a))&&(a=eval(a).toString())}catch(e){}return isNaN(1*a)?b:1*a},boolCheck=(a,b)=>null!==a?"false"!==a:b,stringCheck=(a,b,c)=>!b||b.includes(a)?a:c,colorCheck=(a,b)=>{let c=numberCheck(a,b);return(/^#[0-9a-f]{6}$/i.test(a)&&(c=numberCheck(a.replace("#","0x"),b)),/^#[0-9a-f]{3}$/i.test(a)&&(c=numberCheck("0x"+a.replace("#","")+a.replace("#",""),b)),/^rgb\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*\)$/.test(a)&&(c=numberCheck("0x"+a.substring(4).split("").reverse().slice(1).reverse().join("").split(",").map(a=>(1*a.trimStart().trimEnd()||0).toString(16)).join(""),b)),isNaN(1*c))?b:c},vectorCheck=(a,b)=>a.some(a=>!numberCheck(a))?b:2===(a=a.map(numberCheck)).length?new THREE.Vector2(...a):3===a.length?new THREE.Vector3(...a):4===a.length?new THREE.Vector4(...a):b,jsonCheck=(a,b)=>{try{return JSON.parse(a)}catch(c){return b}},codeCheck=(a,b)=>{try{return eval(a)}catch(e){return b}},sideCheck=(a,b)=>sides[a]||b,processShape=h=>{let i=new THREE.Shape,d=Array.from(h.children);for(let b=0;b<d.length;b++){let e=d[b];if("PATH"===e.tagName){let j=e.getAttribute("d").toString(),f=j.split(" "),k=null,g=()=>{if(k){switch(k){case"M":case"MOVE":case"MV":i.moveTo(...l);break;case"L":case"LINE":case"LN":i.lineTo(...l);break;case"Q":case"QUADRATIC":case"QD":case"QC":i.quadraticCurveTo(...l);break;case"C":case"B":case"BC":case"BEZIER":case"BZ":i.bezierCurveTo(...l);break;case"Z":case"CLOSE":case"CL":i.closePath()}l.length=0}},l=[];for(let c=0;c<f.length;c++){let a=f[c];[..."MLQCZB","MOVE","MV","LINE","LN","QUADRATIC","QD","QC","BEZIER","BZ","CLOSE","CL"].includes(a[0])?(g(),k=a[0]):a&&l.push(numberCheck(a,0))}g()}}return i},processCurve=a=>new class extends THREE.Curve{getPoint(c,d=new THREE.Vector3){let b=b=>a?a.getAttribute(b):null,e=3*c-1.5,f=Math.sin(2*Math.PI*c);return d.set(numberCheck(b("tx"),e),numberCheck(b("ty"),f),numberCheck(b("tz"),0)).multiplyScalar(numberCheck(b("scalar"),5))}},processBehavior=(obj,behavior,h3d)=>{if(!behavior)return;let actions=[],variables={x:"obj.position.x",y:"obj.position.y",z:"obj.position.z",rx:"obj.rotation.x",ry:"obj.rotation.y",rz:"obj.rotation.z",sx:"obj.scale.x",sy:"obj.scale.y",sz:"obj.scale.z"},lines=behavior.split(";");for(let i=0;i<lines.length;i++){let line=lines[i].trim();if(line){if(/^\s*\w+\s*((\*\*)|\||&|[+\-*/])?\s*=\s*.+$/.test(line)){let equal=line.indexOf("="),varName=line.substring(0,equal-1).trim(),action=line.substring(varName.length,equal+1).trim(),varValue=line.substring(equal+1).trim();if(!variables[varName])return console.error(`[BEHAVIOR] Couldn't find the variable named ${varName} at line ${i+1}: ${line}
Note: Variables: ${Object.keys(variables).join()}`);actions.push([varName,action,varValue,i,line])}else console.error(`[BEHAVIOR] Invalid behavior at line ${i+1}: ${line}`)}}h3d.on("render.before",obj._behaviorFunc=()=>{actions.forEach(action=>{try{let{sin,cos,tan,asin,acos,atan,atan2,sqrt,pow,abs,log,log2,log10,exp,min,max,floor,ceil,round,sign,PI,LN2,E,cosh,cbrt,imul,sinh,LN10,acosh,tanh,asinh,atanh,hypot,clz32,expm1,fround,log1p,LOG2E,LOG10E,random,SQRT1_2,SQRT2,trunc}=Math,pi=PI;eval(variables[action[0]]+action[1]+action[2])}catch(e){return actions=actions.filter(a=>a!==action),console.error(`[BEHAVIOR] Couldn't parse the value at line ${action[3]+1}: ${action[2]}`)}})})},processAttributes=(e,f,c)=>{for(let b=0;b<c.length;b++){let a=c[b];a[2]||(a[2]=a[1].split("-").map((a,b)=>0===b?a:a.charAt(0).toUpperCase()+a.substring(1)).join(""));let d=a[0](f(a[1]),...a.slice(3));d&&(e[a[2]]=d)}},applyAttributes={Object3D(b,a){b.position.x=numberCheck(a("x"),0),b.position.y=numberCheck(a("y"),0),b.position.z=numberCheck(a("z"),0),b.rotation.x=numberCheck(a("rotation-x"),0),b.rotation.y=numberCheck(a("rotation-y"),0),b.rotation.z=numberCheck(a("rotation-z"),0),b.quaternion.x=numberCheck(a("quaternion-x"),0),b.quaternion.y=numberCheck(a("quaternion-y"),0),b.quaternion.z=numberCheck(a("quaternion-z"),0),b.scale.x=numberCheck(a("scale-x"),1),b.scale.y=numberCheck(a("scale-y"),1),b.scale.z=numberCheck(a("scale-z"),1),vectorCheck([a("look-at-x"),a("look-at-y"),a("look-at-z")])&&b.lookAt(vectorCheck([a("look-at-x"),a("look-at-y"),a("look-at-z")])),processAttributes(b,a,[[boolCheck,"cast-shadow"],[boolCheck,"visible"],[boolCheck,"frustum-culled"],[boolCheck,"matrix-auto-update"],[boolCheck,"matrix-world-needs-update"],[boolCheck,"receive-shadow"],[numberCheck,"render-order"]])},Light(a,b){applyAttributes.Object3D(a,b),processAttributes(a,b,[[colorCheck,"color"],[numberCheck,"intensity"]])},BufferGeometry(a,b){processAttributes(a,b,[[boolCheck,"morph-attributes"]])},LatheGeometry(a,b){applyAttributes.BufferGeometry(a,b)},BoxGeometry(a,b){applyAttributes.BufferGeometry(a,b)},CapsuleGeometry(a,b){applyAttributes.LatheGeometry(a,b)},CircleGeometry(a,b){applyAttributes.BufferGeometry(a,b)},ConeGeometry(a,b){applyAttributes.CylinderGeometry(a,b)},CylinderGeometry(a,b){applyAttributes.BufferGeometry(a,b)},PolyhedronGeometry(a,b){applyAttributes.BufferGeometry(a,b)},DodecahedronGeometry(a,b){applyAttributes.PolyhedronGeometry(a,b)},IcosahedronGeometry(a,b){applyAttributes.PolyhedronGeometry(a,b)},OctahedronGeometry(a,b){applyAttributes.PolyhedronGeometry(a,b)},PlaneGeometry(a,b){applyAttributes.BufferGeometry(a,b)},RingGeometry(a,b){applyAttributes.BufferGeometry(a,b)},ShapeGeometry(a,b){applyAttributes.BufferGeometry(a,b)},SphereGeometry(a,b){applyAttributes.BufferGeometry(a,b)},TetrahedronGeometry(a,b){applyAttributes.PolyhedronGeometry(a,b)},TorusGeometry(a,b){applyAttributes.BufferGeometry(a,b)},TorusKnotGeometry(a,b){applyAttributes.BufferGeometry(a,b)},TubeGeometry(a,b){applyAttributes.BufferGeometry(a,b)},ConvexGeometry(a,b){applyAttributes.BufferGeometry(a,b)},ExtrudeGeometry(a,b){applyAttributes.BufferGeometry(a,b)},TextGeometry(a,b){applyAttributes.ExtrudeGeometry(a,b)},Material(a,b){processAttributes(a,b,[[numberCheck,"alpha-test"],[numberCheck,"alpha-to-coverage"],[numberCheck,"blend-dst"],[numberCheck,"blend-dst-alpha"],[numberCheck,"blend-equation"],[numberCheck,"blend-equation-alpha"],[numberCheck,"blend-src"],[numberCheck,"blend-src-alpha"],[boolCheck,"clip-intersection"],[boolCheck,"clip-shadows"],[boolCheck,"color-write"],[jsonCheck,"defines"],[numberCheck,"depth-func"],[boolCheck,"depth-test"],[boolCheck,"depth-write"],[boolCheck,"stencil-write"],[numberCheck,"stencil-write-mask"],[numberCheck,"stencil-func"],[numberCheck,"stencil-ref"],[numberCheck,"stencil-func-mask"],[numberCheck,"stencil-fail"],[numberCheck,"stencil-z-fail"],[stringCheck,"name"],[numberCheck,"opacity"],[boolCheck,"polygon-offset"],[numberCheck,"polygon-offset-factor"],[numberCheck,"polygon-offset-units"],[stringCheck,"precision",null,["highp","mediump","lowp"]],[boolCheck,"premultiplied-alpha"],[boolCheck,"dithering"],[sideCheck,"shadow-side"],[sideCheck,"side"],[boolCheck,"tone-mapped"],[boolCheck,"transparent"],[boolCheck,"visible"],])},MeshBasicMaterial(a,b){applyAttributes.Material(a,b),processAttributes(a,b,[[colorCheck,"color"],[numberCheck,"combine"],[boolCheck,"fog"],[numberCheck,"reflectivity"],[numberCheck,"refraction-ratio"],[boolCheck,"wireframe"],[stringCheck,"wireframe-line-cap","wireframeLinecap",["round","butt","square"]],[stringCheck,"wireframe-line-join","wireframeLinejoin",["round","bevel","miter"]],[numberCheck,"wireframe-line-width","wireframeLinewidth"]])},MeshPhongMaterial(b,a){applyAttributes.Material(b,a),vectorCheck([a("normal-scale-x"),a("normal-scale-y")])&&(b.normalScale=vectorCheck([a("normal-scale-x"),a("normal-scale-y")])),processAttributes(b,a,[[numberCheck,"ao-map-intensity"],[numberCheck,"bump-scale"],[colorCheck,"color"],[numberCheck,"combine"],[numberCheck,"displacement-scale"],[numberCheck,"displacement-bias"],[colorCheck,"emissive"],[numberCheck,"emissive-intensity"],[numberCheck,"flat-shading"],[boolCheck,"fog"],[numberCheck,"light-map-intensity"],[numberCheck,"normal-map-type"],[numberCheck,"reflectivity"],[numberCheck,"refraction-ratio"],[numberCheck,"shininess"],[colorCheck,"specular"],[boolCheck,"wireframe"],[stringCheck,"wireframe-line-cap","wireframeLinecap"],[stringCheck,"wireframe-line-join","wireframeLinejoin"],[numberCheck,"wireframe-line-width","wireframeLinewidth"]])},LineBasicMaterial(a,b){applyAttributes.Material(a,b),processAttributes(a,b,[[colorCheck,"color"],[boolCheck,"fog"],[numberCheck,"line-width","linewidth"],[stringCheck,"line-cap","linecap"],[stringCheck,"line-join","linejoin"]])},LineDashedMaterial(a,b){applyAttributes.LineBasicMaterial(a,b),processAttributes(a,b,[[numberCheck,"dash-size"],[numberCheck,"gap-size"],[numberCheck,"scale"]])},MeshDepthMaterial(a,b){processAttributes(a,b,[[numberCheck,"displacement-scale"],[numberCheck,"displacement-bias"],[boolCheck,"fog"],[boolCheck,"wireframe"],[numberCheck,"wireframe-line-width","wireframeLinewidth"]])},PointLight(a,b){applyAttributes.Light(a,b),processAttributes(a,b,[[numberCheck,"decay"],[numberCheck,"distance"],[numberCheck,"power"]])},AmbientLight(a,b){applyAttributes.Light(a,b)},AmbientLightProbe(a,b){applyAttributes.Light(a,b)},DirectionalLight(a,b){applyAttributes.Light(a,b),processAttributes(a,b,[[boolCheck,"cast-shadow"]])},HemisphereLight(a,b){applyAttributes.Light(a,b),processAttributes(a,b,[[colorCheck,"ground-color"]])},RectAreaLight(a,b){applyAttributes.Light(a,b),processAttributes(a,b,[[numberCheck,"height"],[numberCheck,"width"],[numberCheck,"power"]])},SpotLight(a,b){applyAttributes.Light(a,b),processAttributes(a,b,[[numberCheck,"angle"],[boolCheck,"cast-shadow"],[numberCheck,"decay"],[numberCheck,"distance"],[numberCheck,"penumbra"],[numberCheck,"power"]])},OrbitControls(a,b){processAttributes(a,b,[[boolCheck,"auto-rotate"],[numberCheck,"auto-rotate-speed"],[numberCheck,"damping-factor"],[boolCheck,"enabled"],[boolCheck,"enable-damping"],[boolCheck,"enable-pan"],[boolCheck,"enable-rotate"],[boolCheck,"enable-zoom"],[numberCheck,"key-pan-speed"],[numberCheck,"max-azimuth-angle"],[numberCheck,"max-distance"],[numberCheck,"max-polar-angle"],[numberCheck,"max-zoom"],[numberCheck,"min-azimuth-angle"],[numberCheck,"min-distance"],[numberCheck,"min-polar-angle"],[numberCheck,"min-zoom"],[numberCheck,"pan-speed"],[numberCheck,"rotate-speed"],[boolCheck,"screen-space-panning"]]),["left","right","up","bottom"].forEach(c=>{b("key-"+c)&&(a.keys[c.toUpperCase()]=b("key-"+c.toUpperCase()))}),["left","right","middle"].forEach(c=>{mouseActions[b("mouse-"+c)]&&(a.mouseButtons[c.toUpperCase()]=mouseActions[b("mouse-"+c)])}),["one","two"].forEach(c=>{mouseActions[b("touch-"+c)]&&(a.touches[c.toUpperCase()]=mouseActions[b("touch-"+c)])})},ArcballControls(a,b){processAttributes(a,b,[[boolCheck,"adjust-near-far"],[boolCheck,"cursor-zoom"],[numberCheck,"damping-factor"],[boolCheck,"enabled"],[boolCheck,"enable-animations"],[boolCheck,"enable-grid"],[boolCheck,"enable-pan"],[boolCheck,"enable-rotate"],[boolCheck,"enable-zoom"],[numberCheck,"focus-animation-time"],[numberCheck,"max-distance"],[numberCheck,"max-zoom"],[numberCheck,"min-distance"],[numberCheck,"min-zoom"],[numberCheck,"scale-factor"],[numberCheck,"w-max"],[numberCheck,"radius-factor"]])},FlyControls(a,b){processAttributes(a,b,[[boolCheck,"auto-forward"],[boolCheck,"drag-to-look"],[numberCheck,"movement-speed"],[numberCheck,"roll-speed"]])},FirstPersonControls(a,b){processAttributes(a,b,[[boolCheck,"active-look"],[boolCheck,"auto-forward"],[boolCheck,"constrain-vertical"],[boolCheck,"enabled"],[numberCheck,"height-coef"],[numberCheck,"height-max"],[numberCheck,"height-min"],[numberCheck,"height-speed"],[boolCheck,"look-vertical"],[numberCheck,"look-speed"],[boolCheck,"mouse-drag-on"],[numberCheck,"movement-speed"],[numberCheck,"vertical-max"],[numberCheck,"vertical-min"]])},PointerLockControls(a,b){processAttributes(a,b,[[numberCheck,"max-polar-angle"],[numberCheck,"min-polar-angle"],[numberCheck,"pointer-speed"]])},TrackballControls(b,a){processAttributes(b,a,[[numberCheck,"dynamic-damping-factor"],[boolCheck,"enabled"],[numberCheck,"max-distance"],[numberCheck,"min-distance"],[boolCheck,"no-pan"],[boolCheck,"no-zoom"],[numberCheck,"pan-speed"],[numberCheck,"rotate-speed"],[boolCheck,"static-moving"],[numberCheck,"zoom-speed"]]),b.keys=[stringCheck(a("key-orbit"),"KeyA"),stringCheck(a("key-zoom"),"KeyS"),stringCheck(a("key-pan"),"KeyD")],["left","right","middle"].forEach(c=>{mouseActions[a("mouse-"+c)]&&(b.mouseButtons[c.toUpperCase()]=mouseActions[a("mouse-"+c)])})}},tagNameToName=a=>a.split("-").map(a=>a.charAt(0).toUpperCase()+a.substring(1).toLowerCase()).join(""),build={async BoxGeometry(e,c,d=!0){let a=a=>c.getAttribute(a),b=new THREE.BoxGeometry(numberCheck(a("width"),1),numberCheck(a("height"),1),numberCheck(a("depth"),1),numberCheck(a("widthSegments"),1),numberCheck(a("heightSegments"),1),numberCheck(a("depthSegments"),1));return applyAttributes.BoxGeometry(b,a),d&&elementAssignments.set(c,b),b},async CapsuleGeometry(e,c,d=!0){let a=a=>c.getAttribute(a),b=new THREE.CapsuleGeometry(numberCheck(a("radius"),1),numberCheck(a("length"),1),numberCheck(a("cap-subdivisions"),8),numberCheck(a("radial-segments"),16));return applyAttributes.CapsuleGeometry(b,a),d&&elementAssignments.set(c,b),b},async CircleGeometry(e,c,d=!0){let a=a=>c.getAttribute(a),b=new THREE.CircleGeometry(numberCheck(a("radius"),1),numberCheck(a("segments"),8),numberCheck(a("theta-start"),0),numberCheck(a("theta-length"),2*Math.PI));return applyAttributes.CircleGeometry(b,a),d&&elementAssignments.set(c,b),b},async ConeGeometry(e,c,d=!0){let a=a=>c.getAttribute(a),b=new THREE.ConeGeometry(numberCheck(a("radius"),1),numberCheck(a("height"),1),numberCheck(a("radial-segments"),8),numberCheck(a("height-segments"),1),boolCheck(a("open-ended"),!1),numberCheck(a("theta-start"),0),numberCheck(a("theta-length"),2*Math.PI));return applyAttributes.ConeGeometry(b,a),d&&elementAssignments.set(c,b),b},async CylinderGeometry(e,c,d=!0){let a=a=>c.getAttribute(a),b=new THREE.CylinderGeometry(numberCheck(a("radius-top"),1),numberCheck(a("radius-bottom"),1),numberCheck(a("height"),1),numberCheck(a("radial-segments"),8),numberCheck(a("height-segments"),1),boolCheck(a("open-ended"),!1),numberCheck(a("theta-start"),0),numberCheck(a("theta-length"),2*Math.PI));return applyAttributes.CylinderGeometry(b,a),d&&elementAssignments.set(c,b),b},async DodecahedronGeometry(e,c,d=!0){let a=a=>c.getAttribute(a),b=new THREE.DodecahedronGeometry(numberCheck(a("radius"),1),numberCheck(a("detail"),0));return applyAttributes.DodecahedronGeometry(b,a),d&&elementAssignments.set(c,b),b},async IcosahedronGeometry(e,c,d=!0){let a=a=>c.getAttribute(a),b=new THREE.IcosahedronGeometry(numberCheck(a("radius"),1),numberCheck(a("detail"),0));return applyAttributes.IcosahedronGeometry(b,a),d&&elementAssignments.set(c,b),b},async LatheGeometry(f,c,d=!0){let a=a=>c.getAttribute(a),e=Array.from(c.children).filter(a=>"POINT"===a.tagName).map(a=>new THREE.Vector2(numberCheck(a.getAttribute("x"),0),numberCheck(a.getAttribute("y"),0))),b=new THREE.LatheGeometry(e,numberCheck(a("segments"),12),numberCheck(a("phiStart"),0),numberCheck(a("phiLength"),2*Math.PI));return applyAttributes.LatheGeometry(b,a),d&&elementAssignments.set(c,b),b},async OctahedronGeometry(e,c,d=!0){let a=a=>c.getAttribute(a),b=new THREE.OctahedronGeometry(numberCheck(a("radius"),1),numberCheck(a("detail"),0));return applyAttributes.OctahedronGeometry(b,a),d&&elementAssignments.set(c,b),b},async PlaneGeometry(e,c,d=!0){let a=a=>c.getAttribute(a),b=new THREE.PlaneGeometry(numberCheck(a("width"),1),numberCheck(a("height"),1),numberCheck(a("width-segments"),1),numberCheck(a("height-segments"),1));return applyAttributes.PlaneGeometry(b,a),d&&elementAssignments.set(c,b),b},async RingGeometry(e,c,d=!0){let a=a=>c.getAttribute(a),b=new THREE.RingGeometry(numberCheck(a("inner-radius"),.5),numberCheck(a("outer-radius"),1),numberCheck(a("theta-segments"),8),numberCheck(a("phi-segments"),1),numberCheck(a("theta-start"),0),numberCheck(a("theta-length"),2*Math.PI));return applyAttributes.RingGeometry(b,a),d&&elementAssignments.set(c,b),b},async ShapeGeometry(f,b,e=!0){let c=a=>b.getAttribute(a),d=processShape(Array.from(b.children).filter(a=>"SHAPE"===a.tagName).reverse()[0]);if(!d)return console.error("ShapeGeometry: No <shape> found");let a=new THREE.ShapeGeometry(d,numberCheck(c("curve-segments"),12));return applyAttributes.ShapeGeometry(a,c),e&&elementAssignments.set(b,a),a},async SphereGeometry(e,c,d=!0){let a=a=>c.getAttribute(a),b=new THREE.SphereGeometry(numberCheck(a("radius"),1),numberCheck(a("width-segments"),32),numberCheck(a("height-segments"),16),numberCheck(a("phi-start"),0),numberCheck(a("phi-length"),2*Math.PI),numberCheck(a("theta-start"),0),numberCheck(a("theta-length"),2*Math.PI));return applyAttributes.SphereGeometry(b,a),d&&elementAssignments.set(c,b),b},async TetrahedronGeometry(e,c,d=!0){let a=a=>c.getAttribute(a),b=new THREE.TetrahedronGeometry(numberCheck(a("radius"),1),numberCheck(a("detail"),0));return applyAttributes.TetrahedronGeometry(b,a),d&&elementAssignments.set(c,b),b},async TorusGeometry(e,c,d=!0){let a=a=>c.getAttribute(a),b=new THREE.TorusGeometry(numberCheck(a("radius"),1),numberCheck(a("tube"),.4),numberCheck(a("radial-segments"),8),numberCheck(a("tubular-segments"),6),numberCheck(a("arc"),2*Math.PI));return applyAttributes.TorusGeometry(b,a),d&&elementAssignments.set(c,b),b},async TorusKnotGeometry(e,c,d=!0){let a=a=>c.getAttribute(a),b=new THREE.TorusKnotGeometry(numberCheck(a("radius"),1),numberCheck(a("tube"),.4),numberCheck(a("tubular-segments"),64),numberCheck(a("radial-segments"),8),numberCheck(a("p"),2),numberCheck(a("q"),3));return applyAttributes.TorusKnotGeometry(b,a),d&&elementAssignments.set(c,b),b},async TubeGeometry(f,c,e=!0){let a=a=>c.getAttribute(a),d=processCurve(Array.from(c.children).filter(a=>"CURVE"===a.tagName).reverse()[0]);if(!d)return console.error("TubeGeometry: No <curve> found");let b=new THREE.TubeGeometry(d,numberCheck(a("tubular-segments"),64),numberCheck(a("radius"),1),numberCheck(a("radial-segments"),8),boolCheck(a("closed"),!1));return applyAttributes.TubeGeometry(b,a),e&&elementAssignments.set(c,b),b},async ConvexGeometry(f,b,c=!0){let d=a=>b.getAttribute(a);await loadLibrary(_=>THREE.ConvexHull,"ConvexHull","https://threejs.org/examples/js/math/ConvexHull.js"),await loadLibrary(_=>THREE.ConvexGeometry,"ConvexGeometry","https://threejs.org/examples/js/geometries/ConvexGeometry.js");let e=Array.from(b.children).filter(a=>"POINT"===a.tagName).map(a=>new THREE.Vector3(numberCheck(a.getAttribute("x"),0),numberCheck(a.getAttribute("y"),0),numberCheck(a.getAttribute("z"),0))),a=new THREE.ConvexGeometry(e);return applyAttributes.ConvexGeometry(a,d),c&&elementAssignments.set(b,a),a},async TextGeometry(d,b,f=!0){let a=a=>b.getAttribute(a);await loadLibrary(_=>!THREE.TextGeometry.toString().includes("console.error"),"TextGeometry","https://threejs.org/examples/js/geometries/TextGeometry.js");let e=d.fonts.find(b=>[b.name,b.src].includes(stringCheck(a("font"))))||d.fonts.find(b=>b.familyName===stringCheck(a("font")));if(!e)return console.warn("Font not found: "+stringCheck(a("font")));b.style.display="none";let c=new THREE.TextGeometry(stringCheck(b.innerText),{font:e.font,size:numberCheck(a("size"),100),height:numberCheck(a("height"),50),curveSegments:numberCheck(a("curve-segments"),12),bevelEnabled:boolCheck(a("bevel"),!1),bevelThickness:numberCheck(a("bevel-thickness"),10),bevelSize:numberCheck(a("bevel-size"),8),bevelOffset:numberCheck(a("bevel-offset"),0),bevelSegments:numberCheck(a("bevel-segments"),3)});return applyAttributes.TextGeometry(c,a),f&&elementAssignments.set(b,c),c},async MeshBasicMaterial(f,c,d=!0){let e=a=>c.getAttribute(a),a={};applyAttributes.MeshBasicMaterial(a,e);let b=new THREE.MeshBasicMaterial(a);return d&&elementAssignments.set(c,b),b},async MeshPhongMaterial(f,c,d=!0){let e=a=>c.getAttribute(a),a={};applyAttributes.MeshPhongMaterial(a,e);let b=new THREE.MeshPhongMaterial(a);return d&&elementAssignments.set(c,b),b},async LineBasicMaterial(f,c,d=!0){let e=a=>c.getAttribute(a),a={};applyAttributes.LineBasicMaterial(a,e);let b=new THREE.LineBasicMaterial(a);return d&&elementAssignments.set(c,b),b},async LineDashedMaterial(f,c,d=!0){let e=a=>c.getAttribute(a),a={};applyAttributes.LineDashedMaterial(a,e);let b=new THREE.LineDashedMaterial(a);return d&&elementAssignments.set(c,b),b},async MeshDepthMaterial(f,c,d=!0){let e=a=>c.getAttribute(a),a={};applyAttributes.MeshDepthMaterial(a,e);let b=new THREE.MeshDepthMaterial(a);return d&&elementAssignments.set(c,b),b},async Mesh(c,g,h=!0){let a=a=>g.getAttribute(a),f=b=>{let a=Array.from(g.children).filter(a=>a.tagName.endsWith(b)&&build[tagNameToName(a.tagName)]).reverse()[0];if(a)return build[tagNameToName(a.tagName)](c,a,b=>a.getAttribute(b))},d=a("geometry")?c.element.querySelector(a("geometry")):await f("-GEOMETRY");d instanceof THREE.BufferGeometry||(d=new THREE.BoxGeometry);let e=a("material")?c.element.querySelector(a("material")):await f("-MATERIAL");e instanceof THREE.Material||(e=new THREE.MeshBasicMaterial);let b=new THREE.Mesh(d,e);return processBehavior(b,a("behavior"),c),applyAttributes.Object3D(b,a),boolCheck(a("register"),!0)&&c.scene.add(b),h&&elementAssignments.set(g,b),b},async PointLight(c,d,e=!0){let b=a=>d.getAttribute(a),a=new THREE.PointLight;return processBehavior(a,b("behavior"),c),applyAttributes.PointLight(a,b),boolCheck(b("register"),!0)&&c.scene.add(a),e&&elementAssignments.set(d,a),a},async AmbientLight(c,d,e=!0){let b=a=>d.getAttribute(a),a=new THREE.AmbientLight;return processBehavior(a,b("behavior"),c),applyAttributes.AmbientLight(a,b),boolCheck(b("register"),!0)&&c.scene.add(a),e&&elementAssignments.set(d,a),a},async AmbientLightProbe(c,d,e=!0){let b=a=>d.getAttribute(a),a=new THREE.AmbientLightProbe;return processBehavior(a,b("behavior"),c),applyAttributes.AmbientLightProbe(a,b),boolCheck(b("register"),!0)&&c.scene.add(a),e&&elementAssignments.set(d,a),a},async DirectionalLight(c,d,e=!0){let b=a=>d.getAttribute(a),a=new THREE.DirectionalLight;return processBehavior(a,b("behavior"),c),applyAttributes.DirectionalLight(a,b),boolCheck(b("register"),!0)&&c.scene.add(a),e&&elementAssignments.set(d,a),a},async HemisphereLight(c,d,e=!0){let b=a=>d.getAttribute(a),a=new THREE.HemisphereLight;return processBehavior(a,b("behavior"),c),applyAttributes.HemisphereLight(a,b),boolCheck(b("register"),!0)&&c.scene.add(a),e&&elementAssignments.set(d,a),a},async RectAreaLight(c,d,e=!0){let b=a=>d.getAttribute(a),a=new THREE.RectAreaLight;return processBehavior(a,b("behavior"),c),applyAttributes.RectAreaLight(a,b),boolCheck(b("register"),!0)&&c.scene.add(a),e&&elementAssignments.set(d,a),a},async SpotLight(c,d,e=!0){let b=a=>d.getAttribute(a),a=new THREE.SpotLight;return processBehavior(a,b("behavior"),c),applyAttributes.SpotLight(a,b),boolCheck(b("register"),!0)&&c.scene.add(a),e&&elementAssignments.set(d,a),a},async OrbitControls(b,c,d=!0){let e=a=>c.getAttribute(a);await loadLibrary(_=>THREE.OrbitControls,"OrbitControls","https://threejs.org/examples/js/controls/OrbitControls.js");let a=new THREE.OrbitControls(b.camera,b.renderer.domElement);return applyAttributes.OrbitControls(a,e),b.orbitControls.push(a),d&&elementAssignments.set(c,a),a},async ArcballControls(b,c,d=!0){let e=a=>c.getAttribute(a);await loadLibrary(_=>THREE.ArcballControls,"ArcballControls","https://threejs.org/examples/js/controls/ArcballControls.js");let a=new THREE.ArcballControls(b.camera,b.renderer.domElement);return applyAttributes.ArcballControls(a,e),b.arcballControls.push(a),d&&elementAssignments.set(c,a),a},async FlyControls(b,c,d=!0){let e=a=>c.getAttribute(a);await loadLibrary(_=>THREE.FlyControls,"FlyControls","https://threejs.org/examples/js/controls/FlyControls.js");let a=new THREE.FlyControls(b.camera,b.renderer.domElement);return applyAttributes.FlyControls(a,e),b.flyControls.push(a),d&&elementAssignments.set(c,a),a},async FirstPersonControls(b,c,d=!0){let e=a=>c.getAttribute(a);await loadLibrary(_=>THREE.FirstPersonControls,"FirstPersonControls","https://threejs.org/examples/js/controls/FirstPersonControls.js");let a=new THREE.FirstPersonControls(b.camera,b.renderer.domElement);return applyAttributes.FirstPersonControls(a,e),b.firstPersonControls.push(a),d&&elementAssignments.set(c,a),a},async PointerLockControls(b,c,d=!0){let e=a=>c.getAttribute(a);await loadLibrary(_=>THREE.PointerLockControls,"PointerLockControls","https://threejs.org/examples/js/controls/PointerLockControls.js");let a=new THREE.PointerLockControls(b.camera,b.renderer.domElement);return applyAttributes.PointerLockControls(a,e),a.connect(),b.pointerLockControls.push(a),d&&elementAssignments.set(c,a),a},async TrackballControls(b,c,d=!0){let e=a=>c.getAttribute(a);await loadLibrary(_=>THREE.TrackballControls,"TrackballControls","https://threejs.org/examples/js/controls/TrackballControls.js");let a=new THREE.TrackballControls(b.camera,b.renderer.domElement);return applyAttributes.TrackballControls(a,e),b.trackballControls.push(a),d&&elementAssignments.set(c,a),a},async Font(d,c,e=!0){let b=a=>c.getAttribute(a);fontLoader||(await loadLibrary(_=>THREE.FontLoader.prototype.load,"FontLoader","https://threejs.org/examples/js/loaders/FontLoader.js"),fontLoader=new THREE.FontLoader);let a=await new Promise(a=>fontLoader.load(b("src"),a,_=>_,_=>a(null)));return(elementAssignments.set(c,a),a)?(d.fonts.push({src:b("src"),name:b("name"),familyName:a.data.familyName,font:a}),e&&elementAssignments.set(c,a),a):console.error("Failed to load font: "+b("src"))}},fontLoader,mouseActions={ROTATE:THREE.MOUSE.ROTATE,rotate:THREE.MOUSE.ROTATE,PAN:THREE.MOUSE.PAN,pan:THREE.MOUSE.PAN,DOLLY:THREE.MOUSE.DOLLY,dolly:THREE.MOUSE.DOLLY};for(let i=0;i<els.length;i++){let el=els[i],canvas=document.createElement("canvas"),attr=a=>el.getAttribute(a);canvas.width=attr("width")||512,canvas.height=attr("height")||512,el.appendChild(canvas);let scene=new Scene,camera=new PerspectiveCamera(numberCheck(attr("fov"),75),canvas.width/canvas.height,numberCheck(attr("near"),.1),numberCheck(attr("far"),1e3)),renderer=new WebGLRenderer({canvas,alpha:boolCheck(attr("alpha"),!1),premultipliedAlpha:boolCheck(attr("premultipliedAlpha"),!0),antialias:boolCheck(attr("antialias"),!1),stencil:boolCheck(attr("stencil"),!0),preserveDrawingBuffer:boolCheck(attr("preserveDrawingBuffer"),!1),powerPreference:stringCheck(attr("powerPreference"),["high-performance","low-power","default"],"default"),failIfMajorPerformanceCaveat:boolCheck(attr("failIfMajorPerformanceCaveat"),!1),depth:boolCheck(attr("depth"),!0),logarithmicDepthBuffer:boolCheck(attr("logarithmicDepthBuffer"),!1)}),elements=Array.from(el.children);colorCheck(attr("background-color"))&&renderer.setClearColor(colorCheck(attr("background-color"))),vectorCheck([attr("look-at-x"),attr("look-at-y"),attr("look-at-z")])&&camera.lookAt(vectorCheck([attr("look-at-x"),attr("look-at-y"),attr("look-at-z")]));let h3d=new HTML3D(el,scene,camera,renderer);for(let i=0;i<elements.length;i++){let element=elements[i],tagName=tagNameToName(element.tagName);build[tagName]&&await build[tagName](h3d,element)}camera.rotation.set(numberCheck(attr("rotation-x"),0),numberCheck(attr("rotation-y"),0),numberCheck(attr("rotation-z"),0)),camera.position.set(numberCheck(attr("x"),0),numberCheck(attr("y"),0),numberCheck(attr("z"),0)),h3d.orbitControls.forEach(a=>{a.target.x=camera.position.x,a.target.y=camera.position.y}),h3d.arcballControls.forEach(a=>a.update()),html3ds.push(h3d),boolCheck(attr("maximize"))&&h3d.maximize(),boolCheck(attr("center"))&&(h3d.element.style.position="absolute",h3d.element.style.left="50%",h3d.element.style.top="50%",h3d.element.style.transform="translate(-50%, -50%)")}pr(),renderAll()})()