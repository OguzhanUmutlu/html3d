!function(){let t={IDLE:Symbol(),ROTATE:Symbol(),PAN:Symbol(),SCALE:Symbol(),FOV:Symbol(),FOCUS:Symbol(),ZROTATE:Symbol(),TOUCH_MULTI:Symbol(),ANIMATION_FOCUS:Symbol(),ANIMATION_ROTATE:Symbol()},i={NONE:Symbol(),ONE_FINGER:Symbol(),ONE_FINGER_SWITCHED:Symbol(),TWO_FINGER:Symbol(),MULT_FINGER:Symbol(),CURSOR:Symbol()},s={x:0,y:0},e={camera:new THREE.Matrix4,gizmos:new THREE.Matrix4},a={type:"change"},o={type:"start"},r={type:"end"},h=new THREE.Raycaster,n=new THREE.Vector3,c=new THREE.Matrix4,m=new THREE.Matrix4,l=new THREE.Vector3;class u extends THREE.EventDispatcher{constructor(h,u,p=null){super(),this.onWindowResize=()=>{let t=(this._gizmos.scale.x+this._gizmos.scale.y+this._gizmos.scale.z)/3;this._tbRadius=this.calculateTbRadius(this.camera);let i=this._tbRadius/t,s=new THREE.EllipseCurve(0,0,i,i),e=s.getPoints(this._curvePts),o=new THREE.BufferGeometry().setFromPoints(e);for(let r in this._gizmos.children)this._gizmos.children[r].geometry=o;this.dispatchEvent(a)},this.onContextMenu=t=>{if(this.enabled){for(let i=0;i<this.mouseActions.length;i++)if(2==this.mouseActions[i].mouse){t.preventDefault();break}}},this.onPointerCancel=()=>{this._touchStart.splice(0,this._touchStart.length),this._touchCurrent.splice(0,this._touchCurrent.length),this._input=i.NONE},this.onPointerDown=t=>{if(0==t.button&&t.isPrimary?(this._downValid=!0,this._downEvents.push(t),this._downStart=performance.now()):this._downValid=!1,"touch"==t.pointerType&&this._input!=i.CURSOR)switch(this._touchStart.push(t),this._touchCurrent.push(t),this._input){case i.NONE:this._input=i.ONE_FINGER,this.onSinglePanStart(t,"ROTATE"),window.addEventListener("pointermove",this.onPointerMove),window.addEventListener("pointerup",this.onPointerUp);break;case i.ONE_FINGER:case i.ONE_FINGER_SWITCHED:this._input=i.TWO_FINGER,this.onRotateStart(),this.onPinchStart(),this.onDoublePanStart();break;case i.TWO_FINGER:this._input=i.MULT_FINGER,this.onTriplePanStart(t)}else if("touch"!=t.pointerType&&this._input==i.NONE){let s=null;t.ctrlKey||t.metaKey?s="CTRL":t.shiftKey&&(s="SHIFT"),this._mouseOp=this.getOpFromAction(t.button,s),null!=this._mouseOp&&(window.addEventListener("pointermove",this.onPointerMove),window.addEventListener("pointerup",this.onPointerUp),this._input=i.CURSOR,this._button=t.button,this.onSinglePanStart(t,this._mouseOp))}},this.onPointerMove=s=>{if("touch"==s.pointerType&&this._input!=i.CURSOR)switch(this._input){case i.ONE_FINGER:this.updateTouchEvent(s),this.onSinglePanMove(s,t.ROTATE);break;case i.ONE_FINGER_SWITCHED:let e=this.calculatePointersDistance(this._touchCurrent[0],s)*this._devPxRatio;e>=this._switchSensibility&&(this._input=i.ONE_FINGER,this.updateTouchEvent(s),this.onSinglePanStart(s,"ROTATE"));break;case i.TWO_FINGER:this.updateTouchEvent(s),this.onRotateMove(),this.onPinchMove(),this.onDoublePanMove();break;case i.MULT_FINGER:this.updateTouchEvent(s),this.onTriplePanMove(s)}else if("touch"!=s.pointerType&&this._input==i.CURSOR){let a=null;s.ctrlKey||s.metaKey?a="CTRL":s.shiftKey&&(a="SHIFT");let o=this.getOpStateFromAction(this._button,a);null!=o&&this.onSinglePanMove(s,o)}if(this._downValid){let r=this.calculatePointersDistance(this._downEvents[this._downEvents.length-1],s)*this._devPxRatio;r>this._movementThreshold&&(this._downValid=!1)}},this.onPointerUp=t=>{if("touch"==t.pointerType&&this._input!=i.CURSOR){let s=this._touchCurrent.length;for(let e=0;e<s;e++)if(this._touchCurrent[e].pointerId==t.pointerId){this._touchCurrent.splice(e,1),this._touchStart.splice(e,1);break}switch(this._input){case i.ONE_FINGER:case i.ONE_FINGER_SWITCHED:window.removeEventListener("pointermove",this.onPointerMove),window.removeEventListener("pointerup",this.onPointerUp),this._input=i.NONE,this.onSinglePanEnd();break;case i.TWO_FINGER:this.onDoublePanEnd(t),this.onPinchEnd(t),this.onRotateEnd(t),this._input=i.ONE_FINGER_SWITCHED;break;case i.MULT_FINGER:0==this._touchCurrent.length&&(window.removeEventListener("pointermove",this.onPointerMove),window.removeEventListener("pointerup",this.onPointerUp),this._input=i.NONE,this.onTriplePanEnd())}}else"touch"!=t.pointerType&&this._input==i.CURSOR&&(window.removeEventListener("pointermove",this.onPointerMove),window.removeEventListener("pointerup",this.onPointerUp),this._input=i.NONE,this.onSinglePanEnd(),this._button=-1);if(t.isPrimary){if(this._downValid){let a=t.timeStamp-this._downEvents[this._downEvents.length-1].timeStamp;if(a<=this._maxDownTime){if(0==this._nclicks)this._nclicks=1,this._clickStart=performance.now();else{let o=t.timeStamp-this._clickStart,r=this.calculatePointersDistance(this._downEvents[1],this._downEvents[0])*this._devPxRatio;o<=this._maxInterval&&r<=this._posThreshold?(this._nclicks=0,this._downEvents.splice(0,this._downEvents.length),this.onDoubleTap(t)):(this._nclicks=1,this._downEvents.shift(),this._clickStart=performance.now())}}else this._downValid=!1,this._nclicks=0,this._downEvents.splice(0,this._downEvents.length)}else this._nclicks=0,this._downEvents.splice(0,this._downEvents.length)}},this.onWheel=i=>{if(this.enabled&&this.enableZoom){let s=null;i.ctrlKey||i.metaKey?s="CTRL":i.shiftKey&&(s="SHIFT");let e=this.getOpFromAction("WHEEL",s);if(null!=e){i.preventDefault(),this.dispatchEvent(o);let h=i.deltaY/125,n=1;switch(h>0?n=1/this.scaleFactor:h<0&&(n=this.scaleFactor),e){case"ZOOM":if(this.updateTbState(t.SCALE,!0),h>0?n=1/Math.pow(this.scaleFactor,h):h<0&&(n=Math.pow(this.scaleFactor,-h)),this.cursorZoom&&this.enablePan){let c;this.camera.isOrthographicCamera?c=this.unprojectOnTbPlane(this.camera,i.clientX,i.clientY,this.domElement).applyQuaternion(this.camera.quaternion).multiplyScalar(1/this.camera.zoom).add(this._gizmos.position):this.camera.isPerspectiveCamera&&(c=this.unprojectOnTbPlane(this.camera,i.clientX,i.clientY,this.domElement).applyQuaternion(this.camera.quaternion).add(this._gizmos.position)),this.applyTransformMatrix(this.scale(n,c))}else this.applyTransformMatrix(this.scale(n,this._gizmos.position));null!=this._grid&&(this.disposeGrid(),this.drawGrid()),this.updateTbState(t.IDLE,!1),this.dispatchEvent(a),this.dispatchEvent(r);break;case"FOV":if(this.camera.isPerspectiveCamera){this.updateTbState(t.FOV,!0),0!=i.deltaX&&(h=i.deltaX/125,n=1,h>0?n=1/Math.pow(this.scaleFactor,h):h<0&&(n=Math.pow(this.scaleFactor,-h))),this._v3_1.setFromMatrixPosition(this._cameraMatrixState);let m=this._v3_1.distanceTo(this._gizmos.position),l=m/n;l=THREE.MathUtils.clamp(l,this.minDistance,this.maxDistance);let u=m*Math.tan(THREE.MathUtils.DEG2RAD*this.camera.fov*.5),p=THREE.MathUtils.RAD2DEG*(2*Math.atan(u/l));p>this.maxFov?p=this.maxFov:p<this.minFov&&(p=this.minFov);let d=u/Math.tan(THREE.MathUtils.DEG2RAD*(p/2));n=m/d,this.setFov(p),this.applyTransformMatrix(this.scale(n,this._gizmos.position,!1))}null!=this._grid&&(this.disposeGrid(),this.drawGrid()),this.updateTbState(t.IDLE,!1),this.dispatchEvent(a),this.dispatchEvent(r)}}}},this.onSinglePanStart=(i,e)=>{if(this.enabled)switch(this.dispatchEvent(o),this.setCenter(i.clientX,i.clientY),e){case"PAN":if(!this.enablePan)return;-1!=this._animationId&&(cancelAnimationFrame(this._animationId),this._animationId=-1,this._timeStart=-1,this.activateGizmos(!1),this.dispatchEvent(a)),this.updateTbState(t.PAN,!0),this._startCursorPosition.copy(this.unprojectOnTbPlane(this.camera,s.x,s.y,this.domElement)),this.enableGrid&&(this.drawGrid(),this.dispatchEvent(a));break;case"ROTATE":if(!this.enableRotate)return;-1!=this._animationId&&(cancelAnimationFrame(this._animationId),this._animationId=-1,this._timeStart=-1),this.updateTbState(t.ROTATE,!0),this._startCursorPosition.copy(this.unprojectOnTbSurface(this.camera,s.x,s.y,this.domElement,this._tbRadius)),this.activateGizmos(!0),this.enableAnimations&&(this._timePrev=this._timeCurrent=performance.now(),this._angleCurrent=this._anglePrev=0,this._cursorPosPrev.copy(this._startCursorPosition),this._cursorPosCurr.copy(this._cursorPosPrev),this._wCurr=0,this._wPrev=this._wCurr),this.dispatchEvent(a);break;case"FOV":if(!this.camera.isPerspectiveCamera||!this.enableZoom)return;-1!=this._animationId&&(cancelAnimationFrame(this._animationId),this._animationId=-1,this._timeStart=-1,this.activateGizmos(!1),this.dispatchEvent(a)),this.updateTbState(t.FOV,!0),this._startCursorPosition.setY(.5*this.getCursorNDC(s.x,s.y,this.domElement).y),this._currentCursorPosition.copy(this._startCursorPosition);break;case"ZOOM":if(!this.enableZoom)return;-1!=this._animationId&&(cancelAnimationFrame(this._animationId),this._animationId=-1,this._timeStart=-1,this.activateGizmos(!1),this.dispatchEvent(a)),this.updateTbState(t.SCALE,!0),this._startCursorPosition.setY(.5*this.getCursorNDC(s.x,s.y,this.domElement).y),this._currentCursorPosition.copy(this._startCursorPosition)}},this.onSinglePanMove=(i,e)=>{if(this.enabled){let h=e!=this._state;switch(this.setCenter(i.clientX,i.clientY),e){case t.PAN:this.enablePan&&(h?(this.dispatchEvent(r),this.dispatchEvent(o),this.updateTbState(e,!0),this._startCursorPosition.copy(this.unprojectOnTbPlane(this.camera,s.x,s.y,this.domElement)),this.enableGrid&&this.drawGrid(),this.activateGizmos(!1)):(this._currentCursorPosition.copy(this.unprojectOnTbPlane(this.camera,s.x,s.y,this.domElement)),this.applyTransformMatrix(this.pan(this._startCursorPosition,this._currentCursorPosition))));break;case t.ROTATE:if(this.enableRotate){if(h)this.dispatchEvent(r),this.dispatchEvent(o),this.updateTbState(e,!0),this._startCursorPosition.copy(this.unprojectOnTbSurface(this.camera,s.x,s.y,this.domElement,this._tbRadius)),this.enableGrid&&this.disposeGrid(),this.activateGizmos(!0);else{this._currentCursorPosition.copy(this.unprojectOnTbSurface(this.camera,s.x,s.y,this.domElement,this._tbRadius));let c=this._startCursorPosition.distanceTo(this._currentCursorPosition),m=this._startCursorPosition.angleTo(this._currentCursorPosition),l=Math.max(c/this._tbRadius,m);this.applyTransformMatrix(this.rotate(this.calculateRotationAxis(this._startCursorPosition,this._currentCursorPosition),l)),this.enableAnimations&&(this._timePrev=this._timeCurrent,this._timeCurrent=performance.now(),this._anglePrev=this._angleCurrent,this._angleCurrent=l,this._cursorPosPrev.copy(this._cursorPosCurr),this._cursorPosCurr.copy(this._currentCursorPosition),this._wPrev=this._wCurr,this._wCurr=this.calculateAngularSpeed(this._anglePrev,this._angleCurrent,this._timePrev,this._timeCurrent))}}break;case t.SCALE:if(this.enableZoom){if(h)this.dispatchEvent(r),this.dispatchEvent(o),this.updateTbState(e,!0),this._startCursorPosition.setY(.5*this.getCursorNDC(s.x,s.y,this.domElement).y),this._currentCursorPosition.copy(this._startCursorPosition),this.enableGrid&&this.disposeGrid(),this.activateGizmos(!1);else{this._currentCursorPosition.setY(.5*this.getCursorNDC(s.x,s.y,this.domElement).y);let u=this._currentCursorPosition.y-this._startCursorPosition.y,p=1;u<0?p=1/Math.pow(this.scaleFactor,-(8*u)):u>0&&(p=Math.pow(this.scaleFactor,8*u)),this._v3_1.setFromMatrixPosition(this._gizmoMatrixState),this.applyTransformMatrix(this.scale(p,this._v3_1))}}break;case t.FOV:if(this.enableZoom&&this.camera.isPerspectiveCamera){if(h)this.dispatchEvent(r),this.dispatchEvent(o),this.updateTbState(e,!0),this._startCursorPosition.setY(.5*this.getCursorNDC(s.x,s.y,this.domElement).y),this._currentCursorPosition.copy(this._startCursorPosition),this.enableGrid&&this.disposeGrid(),this.activateGizmos(!1);else{this._currentCursorPosition.setY(.5*this.getCursorNDC(s.x,s.y,this.domElement).y);let d=this._currentCursorPosition.y-this._startCursorPosition.y,v=1;d<0?v=1/Math.pow(this.scaleFactor,-(8*d)):d>0&&(v=Math.pow(this.scaleFactor,8*d)),this._v3_1.setFromMatrixPosition(this._cameraMatrixState);let x=this._v3_1.distanceTo(this._gizmos.position),g=x/v;g=THREE.MathUtils.clamp(g,this.minDistance,this.maxDistance);let $=x*Math.tan(THREE.MathUtils.DEG2RAD*this._fovState*.5),_=THREE.MathUtils.RAD2DEG*(2*Math.atan($/g));_=THREE.MathUtils.clamp(_,this.minFov,this.maxFov);let M=$/Math.tan(THREE.MathUtils.DEG2RAD*(_/2));v=x/M,this._v3_2.setFromMatrixPosition(this._gizmoMatrixState),this.setFov(_),this.applyTransformMatrix(this.scale(v,this._v3_2,!1)),n.copy(this._gizmos.position).sub(this.camera.position).normalize().multiplyScalar(M/x),this._m4_1.makeTranslation(n.x,n.y,n.z)}}}this.dispatchEvent(a)}},this.onSinglePanEnd=()=>{if(this._state==t.ROTATE){if(!this.enableRotate)return;if(this.enableAnimations){let i=performance.now()-this._timeCurrent;if(i<120){let s=Math.abs((this._wPrev+this._wCurr)/2),e=this;this._animationId=window.requestAnimationFrame(function(i){e.updateTbState(t.ANIMATION_ROTATE,!0);let a=e.calculateRotationAxis(e._cursorPosPrev,e._cursorPosCurr);e.onRotationAnim(i,a,Math.min(s,e.wMax))})}else this.updateTbState(t.IDLE,!1),this.activateGizmos(!1),this.dispatchEvent(a)}else this.updateTbState(t.IDLE,!1),this.activateGizmos(!1),this.dispatchEvent(a)}else(this._state==t.PAN||this._state==t.IDLE)&&(this.updateTbState(t.IDLE,!1),this.enableGrid&&this.disposeGrid(),this.activateGizmos(!1),this.dispatchEvent(a));this.dispatchEvent(r)},this.onDoubleTap=i=>{if(this.enabled&&this.enablePan&&null!=this.scene){this.dispatchEvent(o),this.setCenter(i.clientX,i.clientY);let e=this.unprojectOnObj(this.getCursorNDC(s.x,s.y,this.domElement),this.camera);if(null!=e&&this.enableAnimations){let h=this;-1!=this._animationId&&window.cancelAnimationFrame(this._animationId),this._timeStart=-1,this._animationId=window.requestAnimationFrame(function(i){h.updateTbState(t.ANIMATION_FOCUS,!0),h.onFocusAnim(i,e,h._cameraMatrixState,h._gizmoMatrixState)})}else null==e||this.enableAnimations||(this.updateTbState(t.FOCUS,!0),this.focus(e,this.scaleFactor),this.updateTbState(t.IDLE,!1),this.dispatchEvent(a))}this.dispatchEvent(r)},this.onDoublePanStart=()=>{this.enabled&&this.enablePan&&(this.dispatchEvent(o),this.updateTbState(t.PAN,!0),this.setCenter((this._touchCurrent[0].clientX+this._touchCurrent[1].clientX)/2,(this._touchCurrent[0].clientY+this._touchCurrent[1].clientY)/2),this._startCursorPosition.copy(this.unprojectOnTbPlane(this.camera,s.x,s.y,this.domElement,!0)),this._currentCursorPosition.copy(this._startCursorPosition),this.activateGizmos(!1))},this.onDoublePanMove=()=>{this.enabled&&this.enablePan&&(this.setCenter((this._touchCurrent[0].clientX+this._touchCurrent[1].clientX)/2,(this._touchCurrent[0].clientY+this._touchCurrent[1].clientY)/2),this._state!=t.PAN&&(this.updateTbState(t.PAN,!0),this._startCursorPosition.copy(this._currentCursorPosition)),this._currentCursorPosition.copy(this.unprojectOnTbPlane(this.camera,s.x,s.y,this.domElement,!0)),this.applyTransformMatrix(this.pan(this._startCursorPosition,this._currentCursorPosition,!0)),this.dispatchEvent(a))},this.onDoublePanEnd=()=>{this.updateTbState(t.IDLE,!1),this.dispatchEvent(r)},this.onRotateStart=()=>{this.enabled&&this.enableRotate&&(this.dispatchEvent(o),this.updateTbState(t.ZROTATE,!0),this._startFingerRotation=this.getAngle(this._touchCurrent[1],this._touchCurrent[0])+this.getAngle(this._touchStart[1],this._touchStart[0]),this._currentFingerRotation=this._startFingerRotation,this.camera.getWorldDirection(this._rotationAxis),this.enablePan||this.enableZoom||this.activateGizmos(!0))},this.onRotateMove=()=>{if(this.enabled&&this.enableRotate){this.setCenter((this._touchCurrent[0].clientX+this._touchCurrent[1].clientX)/2,(this._touchCurrent[0].clientY+this._touchCurrent[1].clientY)/2);let i;this._state!=t.ZROTATE&&(this.updateTbState(t.ZROTATE,!0),this._startFingerRotation=this._currentFingerRotation),this._currentFingerRotation=this.getAngle(this._touchCurrent[1],this._touchCurrent[0])+this.getAngle(this._touchStart[1],this._touchStart[0]),this.enablePan?(this._v3_2.setFromMatrixPosition(this._gizmoMatrixState),i=this.unprojectOnTbPlane(this.camera,s.x,s.y,this.domElement).applyQuaternion(this.camera.quaternion).multiplyScalar(1/this.camera.zoom).add(this._v3_2)):i=new THREE.Vector3().setFromMatrixPosition(this._gizmoMatrixState);let e=THREE.MathUtils.DEG2RAD*(this._startFingerRotation-this._currentFingerRotation);this.applyTransformMatrix(this.zRotate(i,e)),this.dispatchEvent(a)}},this.onRotateEnd=()=>{this.updateTbState(t.IDLE,!1),this.activateGizmos(!1),this.dispatchEvent(r)},this.onPinchStart=()=>{this.enabled&&this.enableZoom&&(this.dispatchEvent(o),this.updateTbState(t.SCALE,!0),this._startFingerDistance=this.calculatePointersDistance(this._touchCurrent[0],this._touchCurrent[1]),this._currentFingerDistance=this._startFingerDistance,this.activateGizmos(!1))},this.onPinchMove=()=>{if(this.enabled&&this.enableZoom){this.setCenter((this._touchCurrent[0].clientX+this._touchCurrent[1].clientX)/2,(this._touchCurrent[0].clientY+this._touchCurrent[1].clientY)/2),this._state!=t.SCALE&&(this._startFingerDistance=this._currentFingerDistance,this.updateTbState(t.SCALE,!0)),this._currentFingerDistance=Math.max(this.calculatePointersDistance(this._touchCurrent[0],this._touchCurrent[1]),12*this._devPxRatio);let i=this._currentFingerDistance/this._startFingerDistance,e;this.enablePan?this.camera.isOrthographicCamera?e=this.unprojectOnTbPlane(this.camera,s.x,s.y,this.domElement).applyQuaternion(this.camera.quaternion).multiplyScalar(1/this.camera.zoom).add(this._gizmos.position):this.camera.isPerspectiveCamera&&(e=this.unprojectOnTbPlane(this.camera,s.x,s.y,this.domElement).applyQuaternion(this.camera.quaternion).add(this._gizmos.position)):e=this._gizmos.position,this.applyTransformMatrix(this.scale(i,e)),this.dispatchEvent(a)}},this.onPinchEnd=()=>{this.updateTbState(t.IDLE,!1),this.dispatchEvent(r)},this.onTriplePanStart=()=>{if(this.enabled&&this.enableZoom){this.dispatchEvent(o),this.updateTbState(t.SCALE,!0);let i=0,e=0,a=this._touchCurrent.length;for(let r=0;r<a;r++)i+=this._touchCurrent[r].clientX,e+=this._touchCurrent[r].clientY;this.setCenter(i/a,e/a),this._startCursorPosition.setY(.5*this.getCursorNDC(s.x,s.y,this.domElement).y),this._currentCursorPosition.copy(this._startCursorPosition)}},this.onTriplePanMove=()=>{if(this.enabled&&this.enableZoom){let t=0,i=0,e=this._touchCurrent.length;for(let o=0;o<e;o++)t+=this._touchCurrent[o].clientX,i+=this._touchCurrent[o].clientY;this.setCenter(t/e,i/e),this._currentCursorPosition.setY(.5*this.getCursorNDC(s.x,s.y,this.domElement).y);let r=this._currentCursorPosition.y-this._startCursorPosition.y,h=1;r<0?h=1/Math.pow(this.scaleFactor,-(8*r)):r>0&&(h=Math.pow(this.scaleFactor,8*r)),this._v3_1.setFromMatrixPosition(this._cameraMatrixState);let c=this._v3_1.distanceTo(this._gizmos.position),m=c/h;m=THREE.MathUtils.clamp(m,this.minDistance,this.maxDistance);let l=c*Math.tan(THREE.MathUtils.DEG2RAD*this._fovState*.5),u=THREE.MathUtils.RAD2DEG*(2*Math.atan(l/m));u=THREE.MathUtils.clamp(u,this.minFov,this.maxFov);let p=l/Math.tan(THREE.MathUtils.DEG2RAD*(u/2));h=c/p,this._v3_2.setFromMatrixPosition(this._gizmoMatrixState),this.setFov(u),this.applyTransformMatrix(this.scale(h,this._v3_2,!1)),n.copy(this._gizmos.position).sub(this.camera.position).normalize().multiplyScalar(p/c),this._m4_1.makeTranslation(n.x,n.y,n.z),this.dispatchEvent(a)}},this.onTriplePanEnd=()=>{this.updateTbState(t.IDLE,!1),this.dispatchEvent(r)},this.setCenter=(t,i)=>{s.x=t,s.y=i},this.initializeMouseActions=()=>{this.setMouseAction("PAN",0,"CTRL"),this.setMouseAction("PAN",2),this.setMouseAction("ROTATE",0),this.setMouseAction("ZOOM","WHEEL"),this.setMouseAction("ZOOM",1),this.setMouseAction("FOV","WHEEL","SHIFT"),this.setMouseAction("FOV",1,"SHIFT")},this.compareMouseAction=(t,i)=>t.operation==i.operation&&t.mouse==i.mouse&&t.key==i.key,this.setMouseAction=(i,s,e=null)=>{let a;if(!["PAN","ROTATE","ZOOM","FOV"].includes(i)||![0,1,2,"WHEEL"].includes(s)||!["CTRL","SHIFT",null].includes(e)||"WHEEL"==s&&"ZOOM"!=i&&"FOV"!=i)return!1;switch(i){case"PAN":a=t.PAN;break;case"ROTATE":a=t.ROTATE;break;case"ZOOM":a=t.SCALE;break;case"FOV":a=t.FOV}let o={operation:i,mouse:s,key:e,state:a};for(let r=0;r<this.mouseActions.length;r++)if(this.mouseActions[r].mouse==o.mouse&&this.mouseActions[r].key==o.key)return this.mouseActions.splice(r,1,o),!0;return this.mouseActions.push(o),!0},this.unsetMouseAction=(t,i=null)=>{for(let s=0;s<this.mouseActions.length;s++)if(this.mouseActions[s].mouse==t&&this.mouseActions[s].key==i)return this.mouseActions.splice(s,1),!0;return!1},this.getOpFromAction=(t,i)=>{let s;for(let e=0;e<this.mouseActions.length;e++)if((s=this.mouseActions[e]).mouse==t&&s.key==i)return s.operation;if(null!=i){for(let a=0;a<this.mouseActions.length;a++)if((s=this.mouseActions[a]).mouse==t&&null==s.key)return s.operation}return null},this.getOpStateFromAction=(t,i)=>{let s;for(let e=0;e<this.mouseActions.length;e++)if((s=this.mouseActions[e]).mouse==t&&s.key==i)return s.state;if(null!=i){for(let a=0;a<this.mouseActions.length;a++)if((s=this.mouseActions[a]).mouse==t&&null==s.key)return s.state}return null},this.getAngle=(t,i)=>180*Math.atan2(i.clientY-t.clientY,i.clientX-t.clientX)/Math.PI,this.updateTouchEvent=t=>{for(let i=0;i<this._touchCurrent.length;i++)if(this._touchCurrent[i].pointerId==t.pointerId){this._touchCurrent.splice(i,1,t);break}},this.calculateAngularSpeed=(t,i,s,e)=>{let a=(e-s)/1e3;return 0==a?0:(i-t)/a},this.calculatePointersDistance=(t,i)=>Math.sqrt(Math.pow(i.clientX-t.clientX,2)+Math.pow(i.clientY-t.clientY,2)),this.calculateRotationAxis=(t,i)=>(this._rotationMatrix.extractRotation(this._cameraMatrixState),this._quat.setFromRotationMatrix(this._rotationMatrix),this._rotationAxis.crossVectors(t,i).applyQuaternion(this._quat),this._rotationAxis.normalize().clone()),this.calculateTbRadius=t=>{let i=t.position.distanceTo(this._gizmos.position);if("PerspectiveCamera"==t.type){let s=THREE.MathUtils.DEG2RAD*t.fov*.5,e=Math.atan(t.aspect*Math.tan(s));return Math.tan(Math.min(s,e))*i*this.radiusFactor}if("OrthographicCamera"==t.type)return Math.min(t.top,t.right)*this.radiusFactor},this.focus=(t,i,s=1)=>{n.copy(t).sub(this._gizmos.position).multiplyScalar(s),this._translationMatrix.makeTranslation(n.x,n.y,n.z),c.copy(this._gizmoMatrixState),this._gizmoMatrixState.premultiply(this._translationMatrix),this._gizmoMatrixState.decompose(this._gizmos.position,this._gizmos.quaternion,this._gizmos.scale),m.copy(this._cameraMatrixState),this._cameraMatrixState.premultiply(this._translationMatrix),this._cameraMatrixState.decompose(this.camera.position,this.camera.quaternion,this.camera.scale),this.enableZoom&&this.applyTransformMatrix(this.scale(i,this._gizmos.position)),this._gizmoMatrixState.copy(c),this._cameraMatrixState.copy(m)},this.drawGrid=()=>{if(null!=this.scene){let t,i,s,e;if(this.camera.isOrthographicCamera){let a=this.camera.right-this.camera.left,o=this.camera.bottom-this.camera.top;e=(s=Math.max(a,o))/20,i=(t=s/this.camera.zoom*3)/e*this.camera.zoom}else if(this.camera.isPerspectiveCamera){let r=this.camera.position.distanceTo(this._gizmos.position),h=THREE.MathUtils.DEG2RAD*this.camera.fov*.5,n=Math.atan(this.camera.aspect*Math.tan(h));e=(s=Math.tan(Math.max(h,n))*r*2)/20,i=(t=3*s)/e}null==this._grid&&(this._grid=new THREE.GridHelper(t,i,8947848,8947848),this._grid.position.copy(this._gizmos.position),this._gridPosition.copy(this._grid.position),this._grid.quaternion.copy(this.camera.quaternion),this._grid.rotateX(.5*Math.PI),this.scene.add(this._grid))}},this.dispose=()=>{-1!=this._animationId&&window.cancelAnimationFrame(this._animationId),this.domElement.removeEventListener("pointerdown",this.onPointerDown),this.domElement.removeEventListener("pointercancel",this.onPointerCancel),this.domElement.removeEventListener("wheel",this.onWheel),this.domElement.removeEventListener("contextmenu",this.onContextMenu),window.removeEventListener("pointermove",this.onPointerMove),window.removeEventListener("pointerup",this.onPointerUp),window.removeEventListener("resize",this.onWindowResize),null!==this.scene&&this.scene.remove(this._gizmos),this.disposeGrid()},this.disposeGrid=()=>{null!=this._grid&&null!=this.scene&&(this.scene.remove(this._grid),this._grid=null)},this.easeOutCubic=t=>1-Math.pow(1-t,3),this.activateGizmos=t=>{let i=this._gizmos.children[0],s=this._gizmos.children[1],e=this._gizmos.children[2];t?(i.material.setValues({opacity:1}),s.material.setValues({opacity:1}),e.material.setValues({opacity:1})):(i.material.setValues({opacity:.6}),s.material.setValues({opacity:.6}),e.material.setValues({opacity:.6}))},this.getCursorNDC=(t,i,s)=>{let e=s.getBoundingClientRect();return this._v2_1.setX((t-e.left)/e.width*2-1),this._v2_1.setY((e.bottom-i)/e.height*2-1),this._v2_1.clone()},this.getCursorPosition=(t,i,s)=>(this._v2_1.copy(this.getCursorNDC(t,i,s)),this._v2_1.x*=(this.camera.right-this.camera.left)*.5,this._v2_1.y*=(this.camera.top-this.camera.bottom)*.5,this._v2_1.clone()),this.setCamera=t=>{t.lookAt(this.target),t.updateMatrix(),"PerspectiveCamera"==t.type&&(this._fov0=t.fov,this._fovState=t.fov),this._cameraMatrixState0.copy(t.matrix),this._cameraMatrixState.copy(this._cameraMatrixState0),this._cameraProjectionState.copy(t.projectionMatrix),this._zoom0=t.zoom,this._zoomState=this._zoom0,this._initialNear=t.near,this._nearPos0=t.position.distanceTo(this.target)-t.near,this._nearPos=this._initialNear,this._initialFar=t.far,this._farPos0=t.position.distanceTo(this.target)-t.far,this._farPos=this._initialFar,this._up0.copy(t.up),this._upState.copy(t.up),this.camera=t,this.camera.updateProjectionMatrix(),this._tbRadius=this.calculateTbRadius(t),this.makeGizmos(this.target,this._tbRadius)},this.makeGizmos=(t,i)=>{let s=new THREE.EllipseCurve(0,0,i,i),e=s.getPoints(this._curvePts),a=new THREE.BufferGeometry().setFromPoints(e),o=new THREE.LineBasicMaterial({color:16744576,fog:!1,transparent:!0,opacity:.6}),r=new THREE.LineBasicMaterial({color:8454016,fog:!1,transparent:!0,opacity:.6}),h=new THREE.LineBasicMaterial({color:8421631,fog:!1,transparent:!0,opacity:.6}),n=new THREE.Line(a,o),c=new THREE.Line(a,r),m=new THREE.Line(a,h),l=.5*Math.PI;if(n.rotation.x=l,c.rotation.y=l,this._gizmoMatrixState0.identity().setPosition(t),this._gizmoMatrixState.copy(this._gizmoMatrixState0),1!==this.camera.zoom){let u=1/this.camera.zoom;this._scaleMatrix.makeScale(u,u,u),this._translationMatrix.makeTranslation(-t.x,-t.y,-t.z),this._gizmoMatrixState.premultiply(this._translationMatrix).premultiply(this._scaleMatrix),this._translationMatrix.makeTranslation(t.x,t.y,t.z),this._gizmoMatrixState.premultiply(this._translationMatrix)}this._gizmoMatrixState.decompose(this._gizmos.position,this._gizmos.quaternion,this._gizmos.scale),this._gizmos.traverse(function(t){t.isLine&&(t.geometry.dispose(),t.material.dispose())}),this._gizmos.clear(),this._gizmos.add(n),this._gizmos.add(c),this._gizmos.add(m)},this.onFocusAnim=(i,s,e,o)=>{if(-1==this._timeStart&&(this._timeStart=i),this._state==t.ANIMATION_FOCUS){let r=i-this._timeStart,h=r/this.focusAnimationTime;if(this._gizmoMatrixState.copy(o),h>=1)this._gizmoMatrixState.decompose(this._gizmos.position,this._gizmos.quaternion,this._gizmos.scale),this.focus(s,this.scaleFactor),this._timeStart=-1,this.updateTbState(t.IDLE,!1),this.activateGizmos(!1),this.dispatchEvent(a);else{let n=this.easeOutCubic(h),c=1-n+this.scaleFactor*n;this._gizmoMatrixState.decompose(this._gizmos.position,this._gizmos.quaternion,this._gizmos.scale),this.focus(s,c,n),this.dispatchEvent(a);let m=this;this._animationId=window.requestAnimationFrame(function(t){m.onFocusAnim(t,s,e,o.clone())})}}else this._animationId=-1,this._timeStart=-1},this.onRotationAnim=(i,s,e)=>{if(-1==this._timeStart&&(this._anglePrev=0,this._angleCurrent=0,this._timeStart=i),this._state==t.ANIMATION_ROTATE){let o=(i-this._timeStart)/1e3,r=e+-this.dampingFactor*o;if(r>0){this._angleCurrent=-(.5*this.dampingFactor)*Math.pow(o,2)+e*o+0,this.applyTransformMatrix(this.rotate(s,this._angleCurrent)),this.dispatchEvent(a);let h=this;this._animationId=window.requestAnimationFrame(function(t){h.onRotationAnim(t,s,e)})}else this._animationId=-1,this._timeStart=-1,this.updateTbState(t.IDLE,!1),this.activateGizmos(!1),this.dispatchEvent(a)}else this._animationId=-1,this._timeStart=-1,this._state!=t.ROTATE&&(this.activateGizmos(!1),this.dispatchEvent(a))},this.pan=(t,i,s=!1)=>{let a=t.clone().sub(i);if(this.camera.isOrthographicCamera)a.multiplyScalar(1/this.camera.zoom);else if(this.camera.isPerspectiveCamera&&s){this._v3_1.setFromMatrixPosition(this._cameraMatrixState0),this._v3_2.setFromMatrixPosition(this._gizmoMatrixState0);let o=this._v3_1.distanceTo(this._v3_2)/this.camera.position.distanceTo(this._gizmos.position);a.multiplyScalar(1/o)}return this._v3_1.set(a.x,a.y,0).applyQuaternion(this.camera.quaternion),this._m4_1.makeTranslation(this._v3_1.x,this._v3_1.y,this._v3_1.z),this.setTransformationMatrices(this._m4_1,this._m4_1),e},this.reset=()=>{this.camera.zoom=this._zoom0,this.camera.isPerspectiveCamera&&(this.camera.fov=this._fov0),this.camera.near=this._nearPos,this.camera.far=this._farPos,this._cameraMatrixState.copy(this._cameraMatrixState0),this._cameraMatrixState.decompose(this.camera.position,this.camera.quaternion,this.camera.scale),this.camera.up.copy(this._up0),this.camera.updateMatrix(),this.camera.updateProjectionMatrix(),this._gizmoMatrixState.copy(this._gizmoMatrixState0),this._gizmoMatrixState0.decompose(this._gizmos.position,this._gizmos.quaternion,this._gizmos.scale),this._gizmos.updateMatrix(),this._tbRadius=this.calculateTbRadius(this.camera),this.makeGizmos(this._gizmos.position,this._tbRadius),this.camera.lookAt(this._gizmos.position),this.updateTbState(t.IDLE,!1),this.dispatchEvent(a)},this.rotate=(t,i)=>{let s=this._gizmos.position;return this._translationMatrix.makeTranslation(-s.x,-s.y,-s.z),this._rotationMatrix.makeRotationAxis(t,-i),this._m4_1.makeTranslation(s.x,s.y,s.z),this._m4_1.multiply(this._rotationMatrix),this._m4_1.multiply(this._translationMatrix),this.setTransformationMatrices(this._m4_1),e},this.copyState=()=>{let t;this.camera.isOrthographicCamera?t=JSON.stringify({arcballState:{cameraFar:this.camera.far,cameraMatrix:this.camera.matrix,cameraNear:this.camera.near,cameraUp:this.camera.up,cameraZoom:this.camera.zoom,gizmoMatrix:this._gizmos.matrix}}):this.camera.isPerspectiveCamera&&(t=JSON.stringify({arcballState:{cameraFar:this.camera.far,cameraFov:this.camera.fov,cameraMatrix:this.camera.matrix,cameraNear:this.camera.near,cameraUp:this.camera.up,cameraZoom:this.camera.zoom,gizmoMatrix:this._gizmos.matrix}})),navigator.clipboard.writeText(t)},this.pasteState=()=>{let t=this;navigator.clipboard.readText().then(function i(s){t.setStateFromJSON(s)})},this.saveState=()=>{this._cameraMatrixState0.copy(this.camera.matrix),this._gizmoMatrixState0.copy(this._gizmos.matrix),this._nearPos=this.camera.near,this._farPos=this.camera.far,this._zoom0=this.camera.zoom,this._up0.copy(this.camera.up),this.camera.isPerspectiveCamera&&(this._fov0=this.camera.fov)},this.scale=(t,i,s=!0)=>{l.copy(i);let a=1/t;if(this.camera.isOrthographicCamera){this.camera.zoom=this._zoomState,this.camera.zoom*=t,this.camera.zoom>this.maxZoom?(this.camera.zoom=this.maxZoom,a=this._zoomState/this.maxZoom):this.camera.zoom<this.minZoom&&(this.camera.zoom=this.minZoom,a=this._zoomState/this.minZoom),this.camera.updateProjectionMatrix(),this._v3_1.setFromMatrixPosition(this._gizmoMatrixState),this._scaleMatrix.makeScale(a,a,a),this._translationMatrix.makeTranslation(-this._v3_1.x,-this._v3_1.y,-this._v3_1.z),this._m4_2.makeTranslation(this._v3_1.x,this._v3_1.y,this._v3_1.z).multiply(this._scaleMatrix),this._m4_2.multiply(this._translationMatrix),l.sub(this._v3_1);let o=l.clone().multiplyScalar(a);return l.sub(o),this._m4_1.makeTranslation(l.x,l.y,l.z),this._m4_2.premultiply(this._m4_1),this.setTransformationMatrices(this._m4_1,this._m4_2),e}if(this.camera.isPerspectiveCamera){this._v3_1.setFromMatrixPosition(this._cameraMatrixState),this._v3_2.setFromMatrixPosition(this._gizmoMatrixState);let r=this._v3_1.distanceTo(l),h=r-r*a,c=r-h;if(c<this.minDistance?(a=this.minDistance/r,h=r-r*a):c>this.maxDistance&&(a=this.maxDistance/r,h=r-r*a),n.copy(l).sub(this._v3_1).normalize().multiplyScalar(h),this._m4_1.makeTranslation(n.x,n.y,n.z),s){let m=this._v3_2;h=(r=m.distanceTo(l))-r*a,n.copy(l).sub(this._v3_2).normalize().multiplyScalar(h),this._translationMatrix.makeTranslation(m.x,m.y,m.z),this._scaleMatrix.makeScale(a,a,a),this._m4_2.makeTranslation(n.x,n.y,n.z).multiply(this._translationMatrix),this._m4_2.multiply(this._scaleMatrix),this._translationMatrix.makeTranslation(-m.x,-m.y,-m.z),this._m4_2.multiply(this._translationMatrix),this.setTransformationMatrices(this._m4_1,this._m4_2)}else this.setTransformationMatrices(this._m4_1);return e}},this.setFov=t=>{this.camera.isPerspectiveCamera&&(this.camera.fov=THREE.MathUtils.clamp(t,this.minFov,this.maxFov),this.camera.updateProjectionMatrix())},this.zRotate=(t,i)=>(this._rotationMatrix.makeRotationAxis(this._rotationAxis,i),this._translationMatrix.makeTranslation(-t.x,-t.y,-t.z),this._m4_1.makeTranslation(t.x,t.y,t.z),this._m4_1.multiply(this._rotationMatrix),this._m4_1.multiply(this._translationMatrix),this._v3_1.setFromMatrixPosition(this._gizmoMatrixState).sub(t),this._v3_2.copy(this._v3_1).applyAxisAngle(this._rotationAxis,i),this._v3_2.sub(this._v3_1),this._m4_2.makeTranslation(this._v3_2.x,this._v3_2.y,this._v3_2.z),this.setTransformationMatrices(this._m4_1,this._m4_2),e),this.unprojectOnObj=(t,i)=>{let s=this.getRaycaster();s.near=i.near,s.far=i.far,s.setFromCamera(t,i);let e=s.intersectObjects(this.scene.children,!0);for(let a=0;a<e.length;a++)if(e[a].object.uuid!=this._gizmos.uuid&&null!=e[a].face)return e[a].point.clone();return null},this.unprojectOnTbSurface=(t,i,s,e,a)=>{if("OrthographicCamera"==t.type){this._v2_1.copy(this.getCursorPosition(i,s,e)),this._v3_1.set(this._v2_1.x,this._v2_1.y,0);let o=Math.pow(this._v2_1.x,2),r=Math.pow(this._v2_1.y,2),h=Math.pow(this._tbRadius,2);return o+r<=.5*h?this._v3_1.setZ(Math.sqrt(h-(o+r))):this._v3_1.setZ(.5*h/Math.sqrt(o+r)),this._v3_1}if("PerspectiveCamera"==t.type){this._v2_1.copy(this.getCursorNDC(i,s,e)),this._v3_1.set(this._v2_1.x,this._v2_1.y,-1),this._v3_1.applyMatrix4(t.projectionMatrixInverse);let n=this._v3_1.clone().normalize(),c=t.position.distanceTo(this._gizmos.position),m=Math.pow(a,2),l=this._v3_1.z,u=Math.sqrt(Math.pow(this._v3_1.x,2)+Math.pow(this._v3_1.y,2));if(0==u)return n.set(this._v3_1.x,this._v3_1.y,a),n;let p=l/u,d=c,v=Math.pow(p,2)+1,x=2*p*d,g=Math.pow(d,2)-m,$=Math.pow(x,2)-4*v*g;if($>=0){this._v2_1.setX((-x-Math.sqrt($))/(2*v)),this._v2_1.setY(p*this._v2_1.x+d);let _=THREE.MathUtils.RAD2DEG*this._v2_1.angle();if(_>=45){let M=Math.sqrt(Math.pow(this._v2_1.x,2)+Math.pow(c-this._v2_1.y,2));return n.multiplyScalar(M),n.z+=c,n}}v=p,$=Math.pow(x=d,2)-4*v*(g=-(.5*m)),this._v2_1.setX((-x-Math.sqrt($))/(2*v)),this._v2_1.setY(p*this._v2_1.x+d);let P=Math.sqrt(Math.pow(this._v2_1.x,2)+Math.pow(c-this._v2_1.y,2));return n.multiplyScalar(P),n.z+=c,n}},this.unprojectOnTbPlane=(t,i,s,e,a=!1)=>{if("OrthographicCamera"==t.type)return this._v2_1.copy(this.getCursorPosition(i,s,e)),this._v3_1.set(this._v2_1.x,this._v2_1.y,0),this._v3_1.clone();if("PerspectiveCamera"==t.type){this._v2_1.copy(this.getCursorNDC(i,s,e)),this._v3_1.set(this._v2_1.x,this._v2_1.y,-1),this._v3_1.applyMatrix4(t.projectionMatrixInverse);let o=this._v3_1.clone().normalize(),r=this._v3_1.z,h=Math.sqrt(Math.pow(this._v3_1.x,2)+Math.pow(this._v3_1.y,2)),n;if(n=a?this._v3_1.setFromMatrixPosition(this._cameraMatrixState0).distanceTo(this._v3_2.setFromMatrixPosition(this._gizmoMatrixState0)):t.position.distanceTo(this._gizmos.position),0==h)return o.set(0,0,0),o;let c=n;return o.multiplyScalar(Math.sqrt(Math.pow(c,2)+Math.pow(-c/(r/h),2))),o.z=0,o}},this.updateMatrixState=()=>{this._cameraMatrixState.copy(this.camera.matrix),this._gizmoMatrixState.copy(this._gizmos.matrix),this.camera.isOrthographicCamera?(this._cameraProjectionState.copy(this.camera.projectionMatrix),this.camera.updateProjectionMatrix(),this._zoomState=this.camera.zoom):this.camera.isPerspectiveCamera&&(this._fovState=this.camera.fov)},this.updateTbState=(t,i)=>{this._state=t,i&&this.updateMatrixState()},this.update=()=>{if(!1===this.target.equals(this._currentTarget)&&(this._gizmos.position.copy(this.target),this._tbRadius=this.calculateTbRadius(this.camera),this.makeGizmos(this.target,this._tbRadius),this._currentTarget.copy(this.target)),this.camera.isOrthographicCamera){if(this.camera.zoom>this.maxZoom||this.camera.zoom<this.minZoom){let t=THREE.MathUtils.clamp(this.camera.zoom,this.minZoom,this.maxZoom);this.applyTransformMatrix(this.scale(t/this.camera.zoom,this._gizmos.position,!0))}}else if(this.camera.isPerspectiveCamera){let i=this.camera.position.distanceTo(this._gizmos.position);if(i>this.maxDistance+1e-6||i<this.minDistance-1e-6){let s=THREE.MathUtils.clamp(i,this.minDistance,this.maxDistance);this.applyTransformMatrix(this.scale(s/i,this._gizmos.position)),this.updateMatrixState()}(this.camera.fov<this.minFov||this.camera.fov>this.maxFov)&&(this.camera.fov=THREE.MathUtils.clamp(this.camera.fov,this.minFov,this.maxFov),this.camera.updateProjectionMatrix());let e=this._tbRadius;if(this._tbRadius=this.calculateTbRadius(this.camera),e<this._tbRadius-1e-6||e>this._tbRadius+1e-6){let a=(this._gizmos.scale.x+this._gizmos.scale.y+this._gizmos.scale.z)/3,o=this._tbRadius/a,r=new THREE.EllipseCurve(0,0,o,o),h=r.getPoints(this._curvePts),n=new THREE.BufferGeometry().setFromPoints(h);for(let c in this._gizmos.children)this._gizmos.children[c].geometry=n}}this.camera.lookAt(this._gizmos.position)},this.setStateFromJSON=i=>{let s=JSON.parse(i);if(void 0!=s.arcballState){this._cameraMatrixState.fromArray(s.arcballState.cameraMatrix.elements),this._cameraMatrixState.decompose(this.camera.position,this.camera.quaternion,this.camera.scale),this.camera.up.copy(s.arcballState.cameraUp),this.camera.near=s.arcballState.cameraNear,this.camera.far=s.arcballState.cameraFar,this.camera.zoom=s.arcballState.cameraZoom,this.camera.isPerspectiveCamera&&(this.camera.fov=s.arcballState.cameraFov),this._gizmoMatrixState.fromArray(s.arcballState.gizmoMatrix.elements),this._gizmoMatrixState.decompose(this._gizmos.position,this._gizmos.quaternion,this._gizmos.scale),this.camera.updateMatrix(),this.camera.updateProjectionMatrix(),this._gizmos.updateMatrix(),this._tbRadius=this.calculateTbRadius(this.camera);let e=new THREE.Matrix4().copy(this._gizmoMatrixState0);this.makeGizmos(this._gizmos.position,this._tbRadius),this._gizmoMatrixState0.copy(e),this.camera.lookAt(this._gizmos.position),this.updateTbState(t.IDLE,!1),this.dispatchEvent(a)}},this.camera=null,this.domElement=u,this.scene=p,this.target=new THREE.Vector3,this._currentTarget=new THREE.Vector3,this.radiusFactor=.67,this.mouseActions=[],this._mouseOp=null,this._v2_1=new THREE.Vector2,this._v3_1=new THREE.Vector3,this._v3_2=new THREE.Vector3,this._m4_1=new THREE.Matrix4,this._m4_2=new THREE.Matrix4,this._quat=new THREE.Quaternion,this._translationMatrix=new THREE.Matrix4,this._rotationMatrix=new THREE.Matrix4,this._scaleMatrix=new THREE.Matrix4,this._rotationAxis=new THREE.Vector3,this._cameraMatrixState=new THREE.Matrix4,this._cameraProjectionState=new THREE.Matrix4,this._fovState=1,this._upState=new THREE.Vector3,this._zoomState=1,this._nearPos=0,this._farPos=0,this._gizmoMatrixState=new THREE.Matrix4,this._up0=new THREE.Vector3,this._zoom0=1,this._fov0=0,this._initialNear=0,this._nearPos0=0,this._initialFar=0,this._farPos0=0,this._cameraMatrixState0=new THREE.Matrix4,this._gizmoMatrixState0=new THREE.Matrix4,this._button=-1,this._touchStart=[],this._touchCurrent=[],this._input=i.NONE,this._switchSensibility=32,this._startFingerDistance=0,this._currentFingerDistance=0,this._startFingerRotation=0,this._currentFingerRotation=0,this._devPxRatio=0,this._downValid=!0,this._nclicks=0,this._downEvents=[],this._downStart=0,this._clickStart=0,this._maxDownTime=250,this._maxInterval=300,this._posThreshold=24,this._movementThreshold=24,this._currentCursorPosition=new THREE.Vector3,this._startCursorPosition=new THREE.Vector3,this._grid=null,this._gridPosition=new THREE.Vector3,this._gizmos=new THREE.Group,this._curvePts=128,this._timeStart=-1,this._animationId=-1,this.focusAnimationTime=500,this._timePrev=0,this._timeCurrent=0,this._anglePrev=0,this._angleCurrent=0,this._cursorPosPrev=new THREE.Vector3,this._cursorPosCurr=new THREE.Vector3,this._wPrev=0,this._wCurr=0,this.adjustNearFar=!1,this.scaleFactor=1.1,this.dampingFactor=25,this.wMax=20,this.enableAnimations=!0,this.enableGrid=!1,this.cursorZoom=!1,this.minFov=5,this.maxFov=90,this.enabled=!0,this.enablePan=!0,this.enableRotate=!0,this.enableZoom=!0,this.enableGizmos=!0,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this._tbRadius=1,this._state=t.IDLE,this.setCamera(h),null!=this.scene&&this.scene.add(this._gizmos),this.domElement.style.touchAction="none",this._devPxRatio=window.devicePixelRatio,this.initializeMouseActions(),this.domElement.addEventListener("contextmenu",this.onContextMenu),this.domElement.addEventListener("wheel",this.onWheel),this.domElement.addEventListener("pointerdown",this.onPointerDown),this.domElement.addEventListener("pointercancel",this.onPointerCancel),window.addEventListener("resize",this.onWindowResize)}applyTransformMatrix(i){if(null!=i.camera&&(this._m4_1.copy(this._cameraMatrixState).premultiply(i.camera),this._m4_1.decompose(this.camera.position,this.camera.quaternion,this.camera.scale),this.camera.updateMatrix(),(this._state==t.ROTATE||this._state==t.ZROTATE||this._state==t.ANIMATION_ROTATE)&&this.camera.up.copy(this._upState).applyQuaternion(this.camera.quaternion)),null!=i.gizmos&&(this._m4_1.copy(this._gizmoMatrixState).premultiply(i.gizmos),this._m4_1.decompose(this._gizmos.position,this._gizmos.quaternion,this._gizmos.scale),this._gizmos.updateMatrix()),this._state==t.SCALE||this._state==t.FOCUS||this._state==t.ANIMATION_FOCUS){if(this._tbRadius=this.calculateTbRadius(this.camera),this.adjustNearFar){let s=this.camera.position.distanceTo(this._gizmos.position),e=new THREE.Box3;e.setFromObject(this._gizmos);let a=new THREE.Sphere;e.getBoundingSphere(a);let o=Math.max(this._nearPos0,a.radius+a.center.length()),r=s-this._initialNear;this.camera.near=s-Math.min(o,r);let h=Math.min(this._farPos0,-a.radius+a.center.length()),n=s-this._initialFar;this.camera.far=s-Math.min(h,n),this.camera.updateProjectionMatrix()}else{let c=!1;this.camera.near!=this._initialNear&&(this.camera.near=this._initialNear,c=!0),this.camera.far!=this._initialFar&&(this.camera.far=this._initialFar,c=!0),c&&this.camera.updateProjectionMatrix()}}}setGizmosVisible(t){this._gizmos.visible=t,this.dispatchEvent(a)}setTbRadius(t){this.radiusFactor=t,this._tbRadius=this.calculateTbRadius(this.camera);let i=new THREE.EllipseCurve(0,0,this._tbRadius,this._tbRadius),s=i.getPoints(this._curvePts),e=new THREE.BufferGeometry().setFromPoints(s);for(let o in this._gizmos.children)this._gizmos.children[o].geometry=e;this.dispatchEvent(a)}setTransformationMatrices(t=null,i=null){null!=t?null!=e.camera?e.camera.copy(t):e.camera=t.clone():e.camera=null,null!=i?null!=e.gizmos?e.gizmos.copy(i):e.gizmos=i.clone():e.gizmos=null}getRaycaster(){return h}}THREE.ArcballControls=u}();